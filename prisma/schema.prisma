// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  name       String
  password   String
  address    Address?
  Company    Company?
  birth_year Int?     @map("birthYear")

  // role          Role        @relation(fields: [role_id], references: [id])
  // role_id       String      @unique @map("roleId") @db.ObjectId
  Permission    Permission? @relation(fields: [permission_id], references: [id])
  permission_id String[]    @db.ObjectId
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  delectedAt    Boolean     @default(false)
}

type Address {
  street String?
  city   String?
  state  String?
  zip    String?
}

// enum Role {
//   USER
//   ADMIN
//   AUTHOR
//   PUBLISHER
// }

model Role {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String   @unique
  description String?
  level       Int
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  delectedAt  Boolean  @default(false)

  // User        User[]
  Permission Permission[]
}

model Permission {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  level       Int
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  delectedAt  Boolean  @default(false)

  User    User[]
  Role    Role?    @relation(fields: [role_id], references: [id])
  role_id String[] @db.ObjectId
}

model BusinessType {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  status     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  delectedAt Boolean  @default(false)

  Company Company[]
}

model Industry {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  status     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  delectedAt Boolean  @default(false)

  Company Company[]
}

model Company {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  company_name    String   @map("companyName")
  industry        String
  webiste         String?
  logo            String
  number_of_emp   Int      @map("NumberOfEmp")
  established     Int
  description     String
  company_email   String   @map("companyEmail")
  company_address Address? @map("companyAddress")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  delectedAt      Boolean  @default(false)

  businessType     BusinessType @relation(fields: [business_type_id], references: [id])
  business_type_id String       @unique @map("businessTypeId") @db.ObjectId
  User             User         @relation(fields: [user_id], references: [id])
  user_id          String       @unique @map("userId") @db.ObjectId
  Industry         Industry?    @relation(fields: [industry_id], references: [id])
  industry_id      String?      @map("industryId") @db.ObjectId
}
